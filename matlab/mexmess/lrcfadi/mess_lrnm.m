%MESS_LRNM  Algebraic Riccati Equation Solver
%
%   MESS_LRNM the Low-Rank Newton Method Riccati Equation solver.
%
%   MESS_LRNM solves various Riccati Equations generated by
%   the equation classes of MEX-M.E.S.S:
%
%   <a href="matlab:help mess_equation_griccati">mess_equation_griccati</a>
%   <a href="matlab:help mess_equation_griccati_dae1">mess_equation_griccati_dae1</a>
%   <a href="matlab:help mess_equation_griccati_dae2">mess_equation_griccati_dae2</a>
%   <a href="matlab:help mess_equation_griccati_so1">mess_equation_griccati_so1</a>
%   <a href="matlab:help mess_equation_griccati_so2">mess_equation_griccati_so2</a>
%
%   [Z,status] = MESS_LRNM(eqn,opt) solves the Riccati
%   Equation generated by an equation class of MEX-M.E.S.S.
%   opt is a <a href="matlab:help mess_options">mess_options</a> instances and contains the options of
%   the algorithm. The solution is returned as a Cholesky
%   factorization. status is a <a href="matlab:help mess_status">mess_status</a> instances and contains
%   informations about the Newton iteration.
%
%   Z = MESS_LRNM(eqn,opt) performs the same as [Z,status] = MESS_LRNM(eqn,opt)
%   but does not return a <a href="matlab:help mess_status">mess_status</a> instance.
%
%   Examples / Tests:
%       <a href="matlab:help example_lrnm_rail">example_lrnm_rail</a>, <a href="matlab:edit example_lrnm_rail">example_lrnm_rail.m</a>
%       <a href="matlab:help test_lrnm_filter">test_lrnm_filter</a>, <a href="matlab:edit test_lrnm_filter">test_lrnm_filter.m</a>
%       <a href="matlab:help test_lrnm_nse_dae2">test_lrnm_nse_dae2</a>, <a href="matlab:edit test_lrnm_nse_dae2">test_lrnm_nse_dae2.m</a>
%       <a href="matlab:help test_lrnm_triple_chain_so1">test_lrnm_triple_chain_so1</a>, <a href="matlab:edit test_lrnm_triple_chain_so1">test_lrnm_triple_chain_so1.m</a>
%       <a href="matlab:help test_lrnm_triple_chain_so2">test_lrnm_triple_chain_so2</a>, <a href="matlab:edit test_lrnm_triple_chain_so2">test_lrnm_triple_chain_so2.m</a>
%       <a href="matlab:help test_lrnm_ww_dae1">test_lrnm_ww_dae1</a>, <a href="matlab:edit test_lrnm_ww_dae1">test_lrnm_ww_dae1.m</a>
%
%   See also MESS_LRADI.
%
%   References:
%   <a href="matlab:disp(mess_cite('BenS10'))">[1]</a>, <a href="matlab:disp(mess_cite('BenHSetal16'))">[2]</a>, <a href="matlab:disp(mess_cite('Ham82a'))">[3]</a>,
%   <a href="matlab:disp(mess_cite('Saa09'))">[4]</a>
%
%   Author: Maximilian Behr (MPI Magdeburg, CSC)

% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, see <http://www.gnu.org/licenses/>.
%
% Copyright (C) Peter Benner, Martin Koehler, Jens Saak and others
%               2009-2018
%

function [Z,status] = mess_lrnm(eqn,opt)
    [Z,status] = mess_call('mess_lrnm',eqn,opt);
end
